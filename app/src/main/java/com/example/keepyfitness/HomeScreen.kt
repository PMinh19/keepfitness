package com.example.keepyfitness
import android.widget.TextView

import android.Manifest
import android.content.Intent
import android.content.pm.PackageManager
import android.os.Build
import android.os.Bundle
import android.widget.LinearLayout
import android.widget.Toast
import androidx.activity.enableEdgeToEdge
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import androidx.core.view.ViewCompat
import androidx.core.view.WindowInsetsCompat
import com.example.keepyfitness.utils.WeatherHelper

class HomeScreen : AppCompatActivity() {

    private val LOCATION_PERMISSION_REQUEST = 2001

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContentView(R.layout.activity_home_screen)

        val btnHeartRate = findViewById<LinearLayout>(R.id.btnHeartRate)
        btnHeartRate.setOnClickListener {
            startActivity(Intent(this, HeartRateActivity::class.java))
        }

        // √Åp padding cho h·ªá th·ªëng bar
        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main)) { v, insets ->
            val systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars())
            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom)
            insets
        }

        // Ki·ªÉm tra quy·ªÅn v·ªã tr√≠
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)
            != PackageManager.PERMISSION_GRANTED
        ) {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
                LOCATION_PERMISSION_REQUEST
            )
        } else {
            showWeatherSuggestion()
        }

        // C√°c n√∫t LinearLayout
        val btnStartWorkout = findViewById<LinearLayout>(R.id.btnStartWorkout)
        btnStartWorkout.setOnClickListener {
            startActivity(Intent(this, ExerciseListActivity::class.java))
        }

        val btnScheduleWorkout = findViewById<LinearLayout>(R.id.btnScheduleWorkout)
        btnScheduleWorkout.setOnClickListener {
            startActivity(Intent(this, ScheduleListActivity::class.java))
        }

        val btnViewHistory = findViewById<LinearLayout>(R.id.btnViewHistory)
        btnViewHistory.setOnClickListener {
            startActivity(Intent(this, WorkoutHistoryActivity::class.java))
        }

        // Y√™u c·∫ßu quy·ªÅn th√¥ng b√°o cho Android 13+
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
            if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS)
                != PackageManager.PERMISSION_GRANTED
            ) {
                ActivityCompat.requestPermissions(
                    this,
                    arrayOf(Manifest.permission.POST_NOTIFICATIONS),
                    1001
                )
            }
        }

        // Load heart rate suggestion on first open
        loadHeartRateSuggestion()
    }

    override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<out String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (requestCode == LOCATION_PERMISSION_REQUEST) {
            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                showWeatherSuggestion()
            } else {
                AlertDialog.Builder(this)
                    .setTitle("Quy·ªÅn v·ªã tr√≠ b·ªã t·ª´ ch·ªëi")
                    .setMessage("Kh√¥ng th·ªÉ l·∫•y g·ª£i √Ω t·∫≠p luy·ªán theo th·ªùi ti·∫øt n·∫øu kh√¥ng c·∫•p quy·ªÅn v·ªã tr√≠.")
                    .setPositiveButton("OK", null)
                    .setCancelable(true) // cho ph√©p ƒë√≥ng dialog
                    .show()
            }
        }
    }

    private fun showWeatherSuggestion() {
        val tvSuggestion = findViewById<TextView>(R.id.tvWeatherSuggestion)
        tvSuggestion.text = "‚è≥ ƒêang l·∫•y g·ª£i √Ω th·ªùi ti·∫øt..."

        try {
            val weatherHelper = WeatherHelper(this, "73371ff12e460447cff4621d4a956c22")
            weatherHelper.getWeatherSuggestion { suggestion ->
                runOnUiThread {
                    tvSuggestion.text = suggestion
                }
            }
        } catch (e: Exception) {
            e.printStackTrace()
            runOnUiThread {
                tvSuggestion.text = "‚ùå Kh√¥ng th·ªÉ l·∫•y g·ª£i √Ω th·ªùi ti·∫øt"
            }
        }
    }

    private fun loadHeartRateSuggestion() {
        val tvHr = findViewById<TextView>(R.id.tvHeartRateSuggestion)
        try {
            val prefs = getSharedPreferences("health_data", MODE_PRIVATE)
            val bpm = prefs.getInt("last_heart_rate_bpm", -1)
            val status = prefs.getString("last_heart_rate_status", null)
            val suggestion = prefs.getString("last_heart_rate_suggestion", null)
            val time = prefs.getLong("last_heart_rate_time", 0L)

            if (bpm > 0 && status != null && suggestion != null && time > 0L) {
                tvHr.text = "ü´Ä Nh·ªãp tim g·∫ßn nh·∫•t: ${bpm} BPM\nüìä ${status}\nüí° ${suggestion}"
            } else {
                tvHr.text = "ü´Ä Ch∆∞a c√≥ nh·ªãp tim g·∫ßn ƒë√¢y. H√£y ƒëo ƒë·ªÉ nh·∫≠n g·ª£i √Ω."
            }
        } catch (e: Exception) {
            tvHr.text = "ü´Ä Kh√¥ng th·ªÉ t·∫£i g·ª£i √Ω nh·ªãp tim"
        }
    }

    override fun onResume() {
        super.onResume()
        loadHeartRateSuggestion()
    }

}
